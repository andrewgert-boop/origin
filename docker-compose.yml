version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: gert_platform
      POSTGRES_USER: gert_user
      POSTGRES_PASSWORD: gert_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gert_user -d gert_platform"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_/data
    command: redis-server --appendonly yes

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://gert_user:gert_password@postgres:5432/gert_platform
      JWT_SECRET: your-super-strong-secret-key-change-in-production
      FRONTEND_URL: http://localhost:5173
      DB_SSL_DISABLE: 'true'
    volumes:
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: npm run dev

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_
  redis_